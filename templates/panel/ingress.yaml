{{- if and .Values.panel.enabled .Values.panel.ingress.enabled -}}
{{- $hostMatch := printf "Host(`%s`)" .Values.panel.ingress.host -}}
{{- $name := printf "%s-panel" .Release.Name -}}
{{- $httpMiddlewareName := printf "%s-http-redirect" $name -}}
{{- $tlsSecretName := printf "%s-tls" $name -}}

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ $name }}
spec:
  commonName: {{ .Values.panel.ingress.host }}
  secretName: {{ $tlsSecretName }}
  dnsNames:
    - {{ .Values.panel.ingress.host }}
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ $httpMiddlewareName }}
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $name }}-web
spec:
  entryPoints: [web]
  routes:
    - match: {{ $hostMatch }}
      kind: Rule
      middlewares:
        - name: {{ $httpMiddlewareName }}
      services:
        - name: noop@internal
          kind: TraefikService
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $name }}-websecure
spec:
  entryPoints: [websecure]
  tls:
    secretName: {{ $tlsSecretName }}
  routes:
    - match: {{ $hostMatch }}
      kind: Rule
      services:
        - name: {{ include "panel.svcName" . }}
          port: http
{{- end -}}
