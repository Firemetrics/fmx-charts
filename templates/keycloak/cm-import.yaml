{{- if and .Values.keycloak.enabled .Values.keycloak.importRealm.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.keycloak.importRealm.configMapName | quote }}
data:
  {{ .Values.keycloak.importRealm.realmName }}-realm.json: |
    {
      "realm": "{{ .Values.keycloak.importRealm.realmName }}",
      "enabled": true,
      "defaultDefaultClientScopes": ["basic"],
      "clients": [
        {{- if .Values.panel.enabled }}
        {
          "clientId": "{{ .Values.panel.oidc.clientId }}",
          "enabled": true,
          "publicClient": true,
          {{- if and .Values.ingress.enabled }}
          "redirectUris": ["https://{{ .Values.ingress.host }}/panel/*"],
          {{- else }}
          "redirectUris": [],
          {{- end }}
          "defaultClientScopes": [
            "basic",
            "attribute-fhir-user",
            "audience-panel"
            {{- if .Values.panel.enabled }},
            "audience-fuego"
            {{- end }}
          ]
        }
        {{- end }}
      ],
      "clientScopes": [
        {
          "name": "basic",
          "description": "OpenID Connect scope for add all basic claims to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "name": "auth_time",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "AUTH_TIME",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "auth_time",
                "jsonType.label": "long"
              }
            },
            {
              "name": "sub",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-sub-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "name": "attribute-fhir-user",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "attribute-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "aggregate.attrs": "false",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "fhirUser",
                "access.token.claim": "true",
                "claim.name": "fhirUser",
                "jsonType.label": "String"
              }
            }
          ]
        }
        {{- if .Values.fuego.enabled }},
        {
          "name": "audience-fuego",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "audience-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.custom.audience": "
                {{- if .Values.ingress.enabled -}}
                  https://{{ .Values.ingress.host }}/fhir/
                {{- else -}}
                  {{ .Values.fuego.oidc.audience }}
                {{- end -}}
                ",
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        }
        {{- end }}
        {{- if .Values.panel.enabled }},
        {
          "name": "audience-panel",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "audience-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.custom.audience": "
                {{- if .Values.ingress.enabled -}}
                  https://{{ .Values.ingress.host }}/panel/
                {{- else -}}
                  {{ .Values.panel.oidc.audience }}
                {{- end -}}
                ",
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        }
        {{- end }}
      ]
    }
{{- end -}}
