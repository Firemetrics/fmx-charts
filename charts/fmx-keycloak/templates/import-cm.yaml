{{- if .Values.importRealm.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "importRealmConfigMapName" . }}
data:
  {{ .Values.importRealm.realmName }}-realm.json: |
    {
      "realm": "{{ .Values.importRealm.realmName }}",
      "enabled": true,
      "defaultDefaultClientScopes": ["basic", "email", "profile", "groups"],
      "clientScopes": [
        {
          "name": "basic",
          "description": "OpenID Connect scope for add all basic claims to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "name": "auth_time",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "AUTH_TIME",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "auth_time",
                "jsonType.label": "long"
              }
            },
            {
              "name": "sub",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-sub-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "aggregate.attrs": "false",
                "userinfo.token.claim": "true",
                "introspection.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "user.attribute": "email",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "name": "email_verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "introspection.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "user.attribute": "emailVerified",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "aggregate.attrs": "false",
                "userinfo.token.claim": "true",
                "introspection.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "user.attribute": "username",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "introspection.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "introspection.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "attribute-fhir-user",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "attribute-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "aggregate.attrs": "false",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "fhirUser",
                "access.token.claim": "true",
                "claim.name": "fhirUser",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "audience-fuego",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "audience-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.custom.audience": {{ .Values.fuego.oidcAudience | quote }},
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "name": "audience-panel",
          "protocol": "openid-connect",
          "protocolMappers": [
            {
              "name": "audience-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.custom.audience": {{ .Values.panel.oidcAudience | quote }},
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        }
      ]
    }
{{- end -}}
