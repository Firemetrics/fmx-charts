apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "jobName" . }}
spec:
  template:
    spec:
      restartPolicy: OnFailure
      {{- with .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ . }}
      {{ end }}
      containers:
        - name: main
          image: {{ .Values.image | quote }}
          {{- with .Values.securityContext }}
          securityContext: {{- . | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: PGHOST
              value: {{ .Values.database.hostname | quote }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.userSecret | quote }}
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.userSecret | quote }}
                  key: password
            - name: DATABASE_NAME
              value: {{ .Values.database.dbname | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.database.port | quote }}
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              
              while ! pg_isready > /dev/null 2> /dev/null; do
                echo "Waiting for Spilo to be ready..."
                sleep 1
              done

              echo "Bootstrapping database $DATABASE_NAME..."

              if [ "$(psql -tAc "SELECT 1 FROM pg_database WHERE datname = '$DATABASE_NAME'")" != "1" ]; then
                psql -c "CREATE DATABASE $DATABASE_NAME;"
              fi

              psql -d $DATABASE_NAME -c "CREATE EXTENSION IF NOT EXISTS fhirql CASCADE;"
              psql -d $DATABASE_NAME -c "ALTER EXTENSION fhirql UPDATE;"

              echo "Running fhirql migrations..."
              fql_migrate --postgres-url "postgresql://$PGUSER:$PGPASSWORD@$PGHOST:$DATABASE_PORT/$DATABASE_NAME"
