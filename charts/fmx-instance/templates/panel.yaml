{{- if .Values.components.panel.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ include "panelAppName" . }}
  namespace: {{ .Values.argoCdNamespace | quote }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  source:
    repoURL: {{ .Values.chartRepoUrl | quote }}
    {{ include "chartSelection" (dict "context" . "chart" "fmx-panel") }}
    targetRevision: {{ include "chartRevision" . | quote }}
    helm:
      releaseName: {{ include "panelAppName" . }}
      values: |
      {{- if .Values.components.panel.valuesOverride }}
        {{- .Values.components.panel.valuesOverride | toYaml | nindent 8 }}
      {{- else }}
        image: {{ .Values.components.panel.image | quote }}
        imagePullSecret: {{ .Values.imagePullSecret | quote }}

        {{- with .Values.components.panel.env }}
        env: {{- . | toYaml | nindent 10 }}
        {{- end }}
        {{- with .Values.components.panel.volumes }}
        volumes: {{- . | toYaml | nindent 10 }}
        {{- end }}
        {{- with .Values.components.panel.volumeMounts }}
        volumeMounts: {{- . | toYaml | nindent 10 }}
        {{- end }}
        {{- with .Values.components.panel.securityContext }}
        securityContext: {{- . | toYaml | nindent 10 }}
        {{- end }}

        publicUrl: {{ include "panelUrl" . | quote }}
        publicPath: {{ .Values.components.panel.publicPath | quote }}

        fhirBaseUrl: {{ include "internalFhirBaseUrl" . | quote }}

        {{- if .Values.components.grafana.enabled }}
        grafanaUrl: {{ printf "%s%s" (include "baseUrl" .) .Values.components.grafana.publicPath | quote }}
        {{- end }}

        openaiApiKeySecret: {{- .Values.components.panel.openaiApiKeySecret | toYaml | nindent 10 }}

        database:
          dbname: {{ .Values.database.dbname | quote }}
          port: {{ .Values.database.port }}
          hostname: {{ include "databaseHostname" . | quote }}
          userSecret: {{- .Values.components.panel.databaseUserSecret | toYaml | nindent 12 }}

        oidc:
          enabled: {{ .Values.oidc.enabled }}
          discoveryUrl: {{ include "oidcDiscoveryUrl" . | quote }}
          audience: {{ include "panelOidcAudience" . | quote }}
          clientSecret: {{ .Values.components.panel.oidc.clientSecret | toYaml | nindent 12 }}

        bootstrapDatabase:
          enabled: true
          image: {{ .Values.spiloImage | quote }}
          databaseUserSecret:
            name: {{ include "databaseSuperUserSecretName" . | quote }}

        bootstrapKeycloak:
          enabled: {{ .Values.components.keycloak.enabled }}
          url: {{ include "keycloakPublicUrl" . | quote }}
          realm: {{ .Values.oidc.keycloakRealm | quote }}
          adminUserSecret: {{- .Values.components.keycloak.adminSecret | toYaml | nindent 12 }}

        {{- with .Values.components.panel.featureFlags }}
        featureFlags: {{- . | toYaml | nindent 10 }}
        {{- end }}

        caCertsConfigMap:
          enabled: {{ .Values.caCertsConfigMap.enabled }}
          name: {{ include "caCertsConfigMapName" . | quote }}
          fileName: {{ .Values.caCertsConfigMap.fileName | quote }}
      {{- end }}

  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Release.Namespace }}

  {{- with .Values.syncPolicy }}
  syncPolicy: {{- . | toYaml | nindent 4 }}
  {{- end -}}
{{- end -}}
